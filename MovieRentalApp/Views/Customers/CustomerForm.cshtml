
@model MovieRentalApp.ViewModels.CustomerFormViewModel

@{
    var title = "";
    if (Model.Customer != null && Model.Customer.Id != 0)
    {
        title = "Edit Customer";
    }
    else
    {
        title = "New Customer";
    }
 }

@{
        ViewBag.Title = @title;
        Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@title</h2>


@using (Html.BeginForm("Save", "Customers"))
{
    @* - when we post this form, it will call Save action in Customers controller
        - Html.BeginForm only render the form beginning tag: <form>
        - to render the closing tag, since this method returns a disposable object, if we wrap this call with 'using' block,
          at the end of the using block, the object return from Html.BeginForm call will be disposed, and in the dispose method,
          it will render </form>
    *@

    @* We need to wrap each input field in a <div></div> with class="form-group" for bootstrap to understand
        Inside this div, we will have: 1). input label; 2). input field *@
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Name)
        @Html.TextBoxFor(m => m.Customer.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.Name)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Birthday)
        @Html.TextBoxFor(m => m.Customer.Birthday, "{0:d MMM yyyy}", new { @class = "form-control" }) @* the 2nd argument is a format string*@
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Customer.MembershipTypeId)
        @Html.DropDownListFor(m => m.Customer.MembershipTypeId, new SelectList(Model.MembershipTypes, "Id", "Name"), "Select Membership Types", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.MembershipTypeId)
    </div>

    @* Note: checkbox is a bit different from TextBox.
        Go to bootstrap.com to get the code for checkbox in form, and modify it *@
    <div class="checkbox">
        <label>
            @*<input type="checkbox"> Check me out*@
            @Html.CheckBoxFor(m => m.Customer.IsSubscribedToNewsletter) Subscribed to Newsletter
        </label>
    </div>
    @* set customer id as hidden field *@
    @Html.HiddenFor(m => m.Customer.Id)

    <button type="submit" class="btn btn-primary">Save</button>

}

