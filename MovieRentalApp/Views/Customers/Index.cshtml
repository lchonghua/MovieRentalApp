@model IEnumerable<MovieRentalApp.Models.Customer>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Customers</h2>
@Html.ActionLink("NEW CUSTOMER", "new", "", new {@class="btn btn-primary" })
<p></p>
<table id="customers" class="table table-bordered table-hover">
    <thead>
        <tr>
            <th>Customer</th>
            <th>Membership Type</th>
            <th>Delete</th>
        </tr>
    </thead>
    @* the html tags inside tbody will be rendered by the ajax call in DataTable below*@
    <tbody></tbody>
</table>
@section scripts
{
    <script>
        $(document).ready(function ()  {
            $("#customers").DataTable({
                ajax: {
                    url: "/api/customers",
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "name",
                        render: function (data, type, customer) {
                            @* return a string like this: <a href='/customers/edit/1'>John Smith</a>*@
                            return "<a href='/customers/edit/" + customer.id + "'>" + customer.name + "</a>";
                        }
                    },

                    {
                        data: "membershipType.name"           
                    },

                    {
                        data: "id",
                        render: function (data) {
                            return "<button class='btn-link js-delete' data-customer-id=" + data + ">Delete</button>";
                        }
                    }
                ]

            });

            $("#customers").on("click", ".js-delete", function () {
                var button = $(this);

                bootbox.confirm("Are you sure you want to delete this customer?", function () {
                    if (result) {
                        $.ajax({
                            url: "/api/customers/" + button.attr("data-customer-id"),
                            method: "DELETE",
                            success: function () {
                                button.parent("tr").remove(); @* this is a callback function, and the meaning of 'this' is different from the above 'this'.
                                so we need defined a button variable first *@
                                location.reload(true);
                            }
                        });
                    }
                });
            });
        });
    </script>
}

@* cutomized render function:
    - 1st argument: the data that you want to render, which is the value of the "name" property
    - 2nd argument: the type of this column
    - 3rd argument: the actual object that you want to render, here we call it 'customer'
*@
